// Require nodegame-client if we are not in the browser
if ('object' === typeof module && 'function' === typeof require) {
	module.exports = Ultimatum;
	var node = module.parent.exports.nodegame;
	var JSUS = node.JSUS;
}

function Ultimatum () {
	
	this.name = 'Backend logic for Ultimatum Game';
	this.description = 'No Description';
	this.version = '0.2';
	
	this.minPlayers = 2;
	this.maxPlayers = 10;
	
	this.automatic_step = true;
	
	this.init = function () {};
	
	var pregame = function () {
		console.log('Pregame');
	};
	
	var instructions = function () {
		console.log('Instructions');
	};
		
	var game = function () {

		var that = this;
		
		// Pairs all players
		var groups = this.pl.getGroupsSizeN(2);

		var i;
		var g = null;
		for ( i = 0; i < groups.length; i++) {
			g = groups[i];
			//console.log(g);
			console.log('GSIZE: ' + g.size());
			if (g.size() > 1) {
				g.shuffle();
				// Bidder
				var bidder = g.first();
				console.log('Bidder');
				console.log(bidder);			
				node.say('BIDDER', 'BIDDER', bidder.id);
				
				// Respondent
				var respondent = g.last();
				console.log('Respondent');
				console.log(respondent);
				node.say('RESPONDENT', 'RESPONDENT', respondent.id);

				// Make each other aware
				node.say('OTHER', 'OTHER', bidder.id, respondent.id);
				node.say('OTHER', 'OTHER', respondent.id, bidder.id);

			}
			// Someone was not paired. Let him wait
			else {
				var solo = g.first();
				console.log('Solo');
				console.log(solo);
				node.say('SOLO', 'SOLO', solo.id);
			}	
		}
		console.log('Game');
	};
	
	var postgame = function () {
		console.log('Postgame');
	};
	
	var endgame = function () {
		node.memory.dump('./exit.csv', true);		
		console.log('Game ended');
	};
	
	
	
	// Creating the Game Loop	
	this.loops = {
			
			1: {state:	pregame,
				name:	'Game will start soon'
			},
			
			2: {state: 	instructions,
				name: 	'Instructions'
			},
				
			3: {rounds:	10, 
				state: 	game,
				name: 	'Game'
			},
			
			4: {state:	postgame,
				name: 	'Questionnaire'
			},
				
			5: {state:	endgame,
				name: 	'Thank you'
			}
	};	
}