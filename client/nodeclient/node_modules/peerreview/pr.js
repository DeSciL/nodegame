if ('object' === typeof module && 'function' === typeof require) {
	module.exports = PeerReview;
	var node = module.parent.exports.node;
}

function PeerReview () {
	
	this.name = 'Game Example';
	this.description = 'General Description';
	this.version = '0.2';
	
	this.minPlayers = 2;
	this.maxPlayers = 10;
	
	this.automatic_step = true;
	
	this.init = function() {};
	
	var pregame = function(){
		console.log('Pregame');
	};
	
	var instructions = function() {		
		console.log('Instructions');
	};
		
	var creation = function(){};
	
	var submission = function(){
		//node.memory.dump('./pr.csv');
					
		console.log('submission');
	};
	
	var evaluation = function(){
		
		// TODO: expose these methods from the node obj
		var faces = this.memory.getByKey('CF');
		console.log('FACES');
//		console.log(faces);
		
		var matches = node.utils.matchN(faces,1,true);
		node.log('STEEEE');
		node.log(matches);
		
		for (var i=0; i < matches.length; i++) {
			// idx=1 is the other player
			// TODO: find a way to automatize it
			var data = {face: matches[i][0].value,
						from: matches[i][0].player
			};
			node.say(data, 'CF', matches[i][1].player);
		}
		
		console.log('evaluation');
	};
	
	var dissemination = function(){
		node.memory.dump('./pr.csv');
		
		
		
		console.log('dissemination');
	};
	
	var questionnaire = function() {
		console.log('Postgame');
	};
	
	var endgame = function() {
		node.memory.dump('./pr2.csv', true);
		console.log(node.memory.get(true));
		console.log('Game ended');
	};
	
	var waiting = function(){
		console.log('Waiting');
	};
		
	var gameloop = { // The different, subsequent phases in each round
			
			1: {state: creation,
				name: 'Creation'
			},
			
			2: {state: submission,
				name: 'Submission'
			},
			
			3: {state: evaluation,
				name: 'Evaluation'
			},
			
			4: {state: dissemination,
				name: 'Exhibition'
			}
		};


		
		// LOOPS
		this.loops = {
				
				
				1: {state:	pregame,
					name:	'Game will start soon'
				},
				
				2: {state: 	instructions,
					name: 	'Instructions'
				},
					
				3: {rounds:	10, 
					state: 	gameloop,
					name: 	'Game'
				},
				
				4: {state:	questionnaire,
					name: 	'Questionnaire'
				},
					
				5: {state:	endgame,
					name: 	'Thank you'
				}
				
		};	
}