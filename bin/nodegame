#!/usr/bin/env node

// console.log(program.args.shift()); // > returns foobar without options
// console.log(program.add); // > returns the value after -a


/**
 * Module dependencies.
 */

var program = require('commander'),
    fs = require('fs'),
    os = require('os')
    pkg = require('../package.json'),
    mkdirp = require('mkdirp'),
    version = pkg.version;

program
  .version(version)
  .usage('<nodeGame-folder> [options]')
  .option('-a, --add <game>', 'add a new game');

program.parse(process.argv);


// Path
var path = program.args.shift() || '.';

// end-of-line code
var eol = 'win32' == os.platform() ? '\r\n' : '\n'


// package.json
var pkg = {
    name: 'application-name'
  , version: '0.0.1'
  , private: true
  , scripts: { start: 'node server.js' }
  , dependencies: {
    "nodegame-server": pkg.dependencies["nodegame-server"]
  }
};

/**
 * Server template.
 */

var server = [
  ''
 ,'/*'
 ,' * Start File for nodeGame server with conf.'
 ,' */'
 ,''
 ,'var ServerNode = require(\'nodegame-server\');'
 ,''
 ,'var options = {'
 ,'    name: "nodeGame Server",'
 ,'    port: 8080,'
 ,'    verbosity: 10,'
 ,'    dumpsys: false,'
 ,'    dumpmsg: true,'
 ,'    mail: false,'
 ,'    io: {'
 ,'        set: {'
 ,'            \'transports\': [\'xhr-polling\'],'
 ,'            \'polling duration\': 10,'
 ,'            \'log level\': -1'
 ,'        }'
 ,'    }'
 ,'};'
 ,''
 ,''
 ,'// ServerNode accepts two additional parameters:'
 ,'// - an instance of an http Express server'
 ,'// - an instance of socket.io'
 ,'// If not passed, they will be created with default settings'
 ,'var sn = new ServerNode(options);'
 ,''
 ,'sn.addChannel({'
 ,'    name: \'Ultimatum\','
 ,'    admin: \'ultimatum/admin\','
 ,'    player: \'ultimatum\''
 ,'});'
 ,''
].join(eol);


/**
 * Create application at the given directory `path`.
 *
 * @param {String} path
 */

function createApplicationAt(path) {
  console.log();
  process.on('exit', function(){
    console.log();
    console.log('   install dependencies:');
    console.log('     $ cd %s && npm install', path);
    console.log();
    console.log('   run nodegame:');
    console.log('     $ node server.js');
    console.log();
    console.log('   open 2 browser windows on localhost:8080/ultimatum/index.html:');
    console.log('     $ open http://localhost:8080/ultimatum/index.html');
    console.log();
    console.log('   run the game logic:');
    console.log('     $ node games/ultimatum/server/logic.js');
    console.log();
  });

  // create the folder structure
  mkdir(path, function(){
    mkdir(path + '/games', function(){
      mkdir(path + '/games/ultimatum', function(){
        mkdir(path + '/games/ultimatum/html', function(){
          mkdir(path + '/games/ultimatum/html/css', function(){
            write(path + '/games/ultimatum/html/css/style.css', fs.readFileSync(__dirname + '/../games/ultimatum/html/css/style.css'));
          });
          write(path + '/games/ultimatum/html/bidder.html', fs.readFileSync(__dirname + '/../games/ultimatum/html/bidder.html'));
          write(path + '/games/ultimatum/html/ended.html', fs.readFileSync(__dirname + '/../games/ultimatum/html/ended.html'));
          write(path + '/games/ultimatum/html/instructions.html', fs.readFileSync(__dirname + '/../games/ultimatum/html/instructions.html'));
          write(path + '/games/ultimatum/html/postgame.html', fs.readFileSync(__dirname + '/../games/ultimatum/html/postgame.html'));
          write(path + '/games/ultimatum/html/pregame.html', fs.readFileSync(__dirname + '/../games/ultimatum/html/pregame.html'));
          write(path + '/games/ultimatum/html/resp.html', fs.readFileSync(__dirname + '/../games/ultimatum/html/resp.html'));
          write(path + '/games/ultimatum/html/solo.html', fs.readFileSync(__dirname + '/../games/ultimatum/html/solo.html'));
        });
        mkdir(path + '/games/ultimatum/server', function(){
          write(path + '/games/ultimatum/server/logic.js', fs.readFileSync(__dirname + '/../games/ultimatum/server/logic.js'));
        });
        write(path + '/games/ultimatum/index.html', fs.readFileSync(__dirname + '/../games/ultimatum/index.html'));
        write(path + '/games/ultimatum/monitor.html', fs.readFileSync(__dirname + '/../games/ultimatum/monitor.html'));
        write(path + '/games/ultimatum/Ultimatum.html', fs.readFileSync(__dirname + '/../games/ultimatum/Ultimatum.js'));
        write(path + '/games/ultimatum/Ultimatum_monitor.html', fs.readFileSync(__dirname + '/../games/ultimatum/Ultimatum_monitor.js'));
      });
    });
    write(path + '/package.json', JSON.stringify(pkg, null, 2));
    write(path + '/server.js', server);
  });

};


/**
 * echo str > path.
 *
 * @param {String} path
 * @param {String} str
 */

function write(path, str) {
  fs.writeFile(path, str);
  console.log('   \x1b[36mcreate\x1b[0m : ' + path);
}


/**
 * Mkdir -p.
 *
 * @param {String} path
 * @param {Function} fn
 */

function mkdir(path, fn) {
  mkdirp(path, 0755, function(err){
    if (err) throw err;
    console.log('   \033[36mcreate\033[0m : ' + path);
    fn && fn();
  });
}


createApplicationAt(path);

